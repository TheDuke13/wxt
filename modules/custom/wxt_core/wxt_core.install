<?php

/**
 * @file
 * Install and uninstall functions for the WxT installation profile.
 */

/**
 * Implements hook_requirements().
 */
function wxt_core_requirements($phase) {
  $requirements = [];

  if ($phase === 'install') {
    $info = Drupal::service('extension.list.profile')
      ->get('wxt')
      ->getPathname();

    if (strstr(file_get_contents($info), '# Information added by Drupal.org packaging script')) {
      $requirements['wxt_reject_tarball'] = [
        'title' => t('Missing Composer dependencies'),
        'severity' => REQUIREMENT_ERROR,
        'description' => t('WxT appears to have been downloaded as an archive from drupal.org. WxT cannot be installed this way because drupal.org does not package all the necessary dependencies. Please visit <a href="https://drupalwxt.github.io">this GitHub repository</a> for instructions on how to build WxT using Composer.'),
      ];
    }
  }
  return $requirements;
}

/**
 * Updates for the WxT 4.0.0 release.
 */
function wxt_core_update_8400() {
  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
  $module_installer = \Drupal::service('module_installer');
  $uninstalled = $module_installer->uninstall([
    'libraries',
    'lightning',
    'wxt_ext_translation',
  ]);

  if (!$uninstalled) {
    \Drupal::configFactory()
      ->getEditable('core.extension')
      ->clear('module.libraries')
      ->clear('module.lightning')
      ->clear('module.wxt_ext_translation')
      ->save();
    Drupal::keyValue('system.schema')->deleteMultiple([
      'libraries',
      'lightning',
      'lightning_install',
      'wxt_ext_translation',
    ]);
  }

  // Deprecate RDF additions
  \Drupal::configFactory()->getEditable('rdf.mapping.comment.comment.yml')->delete();
  \Drupal::configFactory()->getEditable('rdf.mapping.node.page.yml')->delete();

  // Deprecate Panels Welcome page.
  \Drupal::configFactory()->getEditable('page_manager.page.welcome.yml')->delete();
  \Drupal::configFactory()->getEditable('page_manager.page_variant.welcome.yml')->delete();

  $module_installer->install([
    'wxt_ext_blocks',
    'wxt_ext_comment',
    'wxt_ext_media',
    'wxt_translation',
  ]);

  // Resolve issues with Lightning Scheduler.
  $entity_type_manager = \Drupal::entityTypeManager();
  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  $modules = [
    'block_content',
    'crop',
    'entity_subqueue',
    'media',
  ];
  $fields = [
    'scheduled_transition_date',
    'scheduled_transition_state',
  ];
  foreach ($modules as $module) {
    foreach ($fields as $field) {
      if ($field_storage_definition = $entity_definition_update_manager->getFieldStorageDefinition($field, $module)) {
        $entity_definition_update_manager->uninstallFieldStorageDefinition($field_storage_definition);
      }
    }
  }

}
